{"version":3,"sources":["Info.js","Map.js","LineGraph.js","Util.js","Graph.js","App.js","reportWebVitals.js","index.js"],"names":["Info","title","cases","isRed","active","total","props","Card","onClick","className","CardContent","Typography","Map","c","map","country","numeral","format","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","casesType","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","a","fetch","then","response","json","console","log","fetchData","length","datasets","backgroundColor","borderColor","editValue","stat","casesTypeColors","hex","mult","recovered","deaths","sortData","sort","b","showData","Circle","center","countryInfo","lat","long","fillOpacity","pathOptions","color","fillColor","Math","sqrt","Popup","style","backgroundImage","flag","Graph","zoom","mapcountries","ChangeView","useMap","setView","MapContainer","TileLayer","url","attribution","App","countries","setCountries","mapCountry","setMapCountry","setC","setCasesType","mapcenter","setMapcenter","mapzoom","setMapzoom","setCountry","setCountryInfo","res","name","iso2","sortedData","getData","change","event","countrycode","target","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31b8696c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Info.css';\r\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\r\n\r\nfunction Info({title,cases,isRed,active,total,...props}) {\r\n    return (\r\n        <Card onClick={props.onClick} className={`card ${active && 'active'} ${isRed && 'red'}`}>\r\n            <CardContent>\r\n                <Typography >\r\n                {title}\r\n                </Typography>\r\n                <h2 className={`case ${!isRed && 'green'}`}>{cases}</h2>\r\n                <Typography >\r\n                {total} total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import React from 'react';\r\nimport './Map.css';\r\nimport numeral from 'numeral'\r\n\r\nfunction Map({c}) {\r\n    return (\r\n        <div className=\"aa\">\r\n\r\n            <h1>Cases by Countries</h1>\r\n            <div className=\"head\">\r\n            {\r\n                c.map(({country,cases})=>(\r\n                    <div className=\"pss\"> <p>{country}</p>\r\n                    <p>{numeral(cases).format(\"0,0\")}</p>\r\n                    </div>\r\n                ))\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\nimport './LineGraph.css';\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n          console.log(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div className=\"graph\" >\r\n      <h1>Worldwide new {casesType}</h1>\r\n      {data?.length > 0 ? (\r\n        <Line className=\"line\"\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )\r\n        :\r\n        <h1>load..</h1>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;","import numeral from 'numeral';\r\nimport React from 'react';\r\nimport './Util.css'\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nexport const editValue = (stat) => (\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}`\r\n        : '+0')\r\n\r\n\r\nconst casesTypeColors = {\r\n    cases: {\r\n        hex: '#CC1034',\r\n        mult: 200\r\n    },\r\n    recovered: {\r\n        hex: '#7DD71D',\r\n        mult: 300\r\n    },\r\n    deaths: {\r\n        hex: '#B50527',\r\n        mult: 750\r\n    },\r\n}\r\n\r\n\r\n\r\nexport const sortData = (data) => {\r\n\r\n    const sortedData = data;\r\n    return sortedData.sort(\r\n        (a, b) => (b.cases - a.cases));\r\n};\r\n\r\nexport const showData = (data, casesType) => (\r\n\r\n    data.map(country => (\r\n        <Circle\r\n            center={[country.countryInfo.lat, country.countryInfo.long]}\r\n            fillOpacity={0.4}\r\n            pathOptions={{\r\n\r\n                color: casesTypeColors[casesType].hex,\r\n                fillColor: casesTypeColors[casesType].hex,\r\n            }}\r\n            radius={Math.sqrt(country[casesType]) * casesTypeColors[casesType].mult}\r\n        >\r\n            <Popup>\r\n                <div>\r\n                    <div className='info-flag' style={{ backgroundImage: `url(${country.countryInfo.flag})` }} />\r\n                    <div><h1>{country.country}</h1></div>\r\n                    <div>Cases: {numeral(country.cases).format(\"0,0\")}</div>\r\n                    <div>Recovered: {numeral(country.recovered).format(\"0,0\")}</div>\r\n                    <div>Deaths: {numeral(country.deaths).format(\"0,0\")}</div>\r\n                </div>\r\n            </Popup>\r\n\r\n        </Circle>\r\n    ))\r\n\r\n)","import React from 'react'\r\nimport './Graph.css';\r\nimport { showData } from './Util';\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\r\n\r\nfunction Graph({ center, zoom, casesType, mapcountries }) {\r\n    function ChangeView({ center, zoom }) {\r\n        const map = useMap();\r\n        map.setView(center, zoom);\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"Graph\">\r\n            <MapContainer>\r\n                <ChangeView center={center} zoom={zoom} />\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a>\r\n                     contributors'/>\r\n\r\n                {showData(mapcountries, casesType)}\r\n            </MapContainer>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Graph\r\n","import { MenuItem, FormControl, Select, } from \"@material-ui/core\";\nimport { useState, useEffect } from \"react\";\nimport Info from './Info.js';\nimport Map from './Map.js';\nimport LineGraph from './LineGraph.js';\nimport Graph from './Graph.js';\nimport \"leaflet/dist/leaflet.css\"\nimport { editValue, sortData } from './Util.js';\nimport './App.css';\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [mapCountry, setMapCountry] = useState([]);\n  const [c, setC] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [mapcenter, setMapcenter] = useState([34.80, -40.47]);\n  const [mapzoom, setMapzoom] = useState(3);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n\n  useEffect(() => {\n\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(res => res.json())\n      .then(data => {\n        setCountryInfo(data);\n      })\n\n  }, []);\n  useEffect(() => {\n\n    const getData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((res) => res.json())\n        .then((data) => {\n          const countries = data.map((country) => (\n            {\n              name: country.country,\n              value: country.countryInfo.iso2\n            }\n          ))\n          const sortedData = sortData(data);\n          setCountries(countries);\n          setMapCountry(data)\n          setC(sortedData);\n        })\n    }\n    getData();\n\n  }, [])\n\n  const change = async (event) => {\n    const countrycode = event.target.value;\n    setCountry(countrycode);\n\n    const url = countrycode === \"worldwide\"\n      ? \"https://disease.sh/v3/covid-19/all\"\n      : `https://disease.sh/v3/covid-19/countries/${countrycode}`;\n\n    await fetch(url)\n      .then(res => res.json())\n      .then(data => {\n        setCountry(countrycode);\n        setCountryInfo(data);\n        countrycode === \"worldwide\" ? setMapcenter([34.80, -40.47])\n          : setMapcenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapzoom(4);\n\n      })\n  };\n  return (\n    <div className=\"App\">\n\n      <div className='left'>\n        <div className=\"app__header\">\n\n          <h1>COVID-19 TRACKER </h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" onChange={change}\n              value={country}>\n\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => (\n\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                ))\n              }\n            </Select>\n\n          </FormControl>\n\n        </div>\n\n        <div className=\"app__stats\">\n          <Info\n            isRed\n            onClick={(e) => setCasesType(\"cases\")}\n            active={casesType === \"cases\"}\n            title=\"Covid cases\" cases={editValue(countryInfo.todayCases)}\n            total={editValue(countryInfo.cases)} />\n          <Info\n            onClick={(e) => setCasesType(\"recovered\")}\n            active={casesType === \"recovered\"}\n            title=\"Recovered\" cases={editValue(countryInfo.todayRecovered)}\n            total={editValue(countryInfo.recovered)} />\n          <Info\n            isRed\n            onClick={(e) => setCasesType(\"deaths\")}\n            active={casesType === \"deaths\"}\n            title=\"Deaths\" cases={editValue(countryInfo.todayDeaths)} total=\n            {editValue(countryInfo.deaths)} />\n\n        </div>\n\n        <Graph center={mapcenter} zoom={mapzoom} mapcountries={mapCountry} casesType={casesType} />\n      </div>\n\n      <div className='right'>\n        <Map cases={countryInfo.cases} countries={countries} c={c} />\n        <LineGraph casesType={casesType} />\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}